pipeline {
    agent any
    environment{
     
        manifestsImg= ''
      
    }
    stages {
        stage('code Checkout') {
            steps {
             git url: 'https://github.com/microservices-demo/carts.git'
                   }
        }
       /* stage('Sonarqube analysis') {
          steps {
            withSonarQubeEnv(credentialsId: 'sonar-token', installationName: 'sonar') {
            sh ''' /var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQube_scanner/bin/sonar-scanner \
            -Dsonar.projectKey=service-carts  \
            -Dsonar.projectName=service-carts  \
            -Dsonar.sources=/var/lib/jenkins/workspace/Pipeline-microservices \
            -Dsonar.java.binaries=./src/main/java \
            -Dsonar.projectVersion=8.9.5 '''
            }
               timeout(time: 10, unit: 'MINUTES') {
            waitForQualityGate abortPipeline: true
       }
          }
        }*/
           // Building Docker images
        stage('Building docker images') {
           steps{
             script {          
              manifestsImg=docker.build("manifests-image","/home/azureuser/microservices-demo/deploy/kubernetes")
            }
           }
        }
        //Uploading Docker images into docker hub
      /*  stage('Uploading to docker hub') {
         steps{  
             script {
                docker.withRegistry(registry,registryCredentials){
                 manifestsImg.push('latest')

               }
              }
           }
        } */
       
    }
}
        
     

